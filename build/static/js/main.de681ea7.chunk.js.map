{"version":3,"sources":["services/blogs.js","reducers/blogReducer.js","reducers/notificationReducer.js","components/Blogs.js","services/users.js","reducers/userReducer.js","components/LoginForm.js","components/Toggle.js","components/BlogForm.js","components/Notification.js","components/RegisterForm.js","App.js","store.js","index.js"],"names":["baseUrl","token","config","login","credentials","a","axios","post","response","data","register","update","blog","url","id","put","deleteBlog","delete","getAll","get","then","setToken","newToken","headers","Authorization","create","likes","console","log","removeBlog","dispatch","blogService","status","type","blogReducer","state","action","concat","filter","newNotification","message","notificationReducer","Blog","useParams","blogs","useSelector","store","useState","like","setLikes","useDispatch","history","useHistory","find","user","useEffect","push","window","confirm","title","author","updateLikes","updatedBlog","returnedBlog","canRemove","display","username","href","onClick","style","Blogs","setTimeout","TableContainer","component","Paper","Table","TableBody","map","TableRow","TableCell","to","newUser","localStorage","setItem","JSON","stringify","userReducer","LoginForm","setUsername","password","setPassword","event","preventDefault","onSubmit","TextField","label","value","name","onChange","target","Button","variant","Toggle","props","visible","setVisible","hideWhenVisible","showWhenVisible","changeVisibility","color","children","BlogForm","setTitle","setAuthor","setUrl","addBlog","newBlog","submitBlog","Notification","className","Alert","severity","RegisterForm","setName","Login","User","users","Users","TableHead","length","App","setUsers","userService","userJSON","getItem","parse","logUser","Container","AppBar","position","Toolbar","Link","removeItem","path","buttonLabel","reducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de681ea7.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\nlet token = null\r\nlet config = null\r\n\r\nconst setToken = (newToken) => {\r\n  if (newToken) {\r\n    token = `bearer ${newToken}`\r\n    config = {\r\n      headers: {\r\n        Authorization: token\r\n      }\r\n    }\r\n  } else {\r\n    token = null\r\n  }\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post('/api/login', credentials)\r\n  return response.data\r\n}\r\n\r\nconst register = async (credentials) => {\r\n  const response = await axios.post('/api/users', credentials)\r\n  return response.data\r\n}\r\n\r\nconst update = async (blog) => {\r\n  const url = `${baseUrl}/${blog.id}`\r\n  const response = await axios.put(url, blog, config)\r\n  return response.data\r\n}\r\n\r\nconst deleteBlog = async (blog) => {\r\n  const url = `${baseUrl}/${blog.id}`\r\n  const response = await axios.delete(url, config)\r\n  return response\r\n}\r\n\r\nconst create = async (blog) => {\r\n  blog = {...blog, likes: 0}\r\n  console.log(blog)\r\n  console.log(config)\r\n  const response = await axios.post(baseUrl, blog, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, login, setToken, create, update, deleteBlog, register }","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state=[], action) => {\r\n    switch (action.type) {\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'NEW_BLOG':\r\n            return state.concat(action.data)\r\n        case 'DELETE_BLOG':\r\n            return state.filter(blog => blog.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//action creator for initializaing blogs from backend\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (blog) => {\r\n    return async dispatch => {\r\n        const response = await blogService.deleteBlog(blog)\r\n        if (response.status === 204) {\r\n            dispatch({\r\n                type: 'DELETE_BLOG',\r\n                id: blog.id\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const newBlog = (blog) => {\r\n    return {\r\n        type: 'NEW_BLOG',\r\n        data: blog\r\n    }\r\n}\r\n\r\nexport default blogReducer","import { useDispatch } from \"react-redux\"\r\n\r\n\r\nconst notificationReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_NOTIF':\r\n            return action.data\r\n        case 'RESET':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const newNotification = (message) => {\r\n    return {\r\n        type: \"NEW_NOTIF\",\r\n        data: message\r\n    }\r\n}\r\n\r\nexport const resetNotification = () => {\r\n    return {\r\n        type: \"RESET\"\r\n    }\r\n}\r\n\r\n\r\nexport default notificationReducer","import React, { useEffect, useState } from 'react'\r\nimport blogService from '../services/blogs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeBlog } from '../reducers/blogReducer'\r\nimport {Link, useParams, useHistory} from \"react-router-dom\"\r\nimport {Table, TableBody, TableRow, TableCell,\r\nTableContainer, Paper} from '@material-ui/core'\r\nimport {newNotification, resetNotification } from '../reducers/notificationReducer'\r\n\r\nexport const Blog = () => {\r\n    const id = useParams().id\r\n    const blogs = useSelector(store => store.blogs)\r\n    const [like, setLikes] = useState(null)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const blog = blogs.find(blog => blog.id === id)\r\n    const user = useSelector(store => store.user)\r\n\r\n    useEffect(() => {\r\n        if (blog) {\r\n            setLikes(blog.likes)\r\n        }\r\n    }, [])\r\n\r\n    if (!blog) {\r\n        history.push(\"/blogs\")\r\n        return null\r\n    }\r\n\r\n  const deleteBlog = async () => {\r\n    if (window.confirm(`Remove blog '${blog.title}' by ${blog.author}?`)) {\r\n        dispatch(removeBlog(blog))\r\n        dispatch(newNotification({type: \"success\", message: 'DELETED POST'}))\r\n        history.push(\"/blogs\")\r\n    }\r\n}\r\n\r\n  const updateLikes = async () => {\r\n    const likes = like + 1\r\n    setLikes(likes)\r\n    const updatedBlog = {...blog, likes}\r\n    const returnedBlog = await blogService.update(updatedBlog)\r\n    console.log(returnedBlog)\r\n  }\r\n\r\n  const canRemove = {\r\n    display: (!user || !blog.user || user.username !== blog.user.username)\r\n    ? 'none' : ''\r\n  }//<p>{`added by ${blog.user.username}`}</p>\r\n\r\n  return (\r\n    <div>\r\n        <h2>{blog.title} by {blog.author} </h2>\r\n        <p><a href={blog.url}>{blog.url}</a></p>\r\n        <p>\r\n          {`likes ${like}`}\r\n          <button onClick={updateLikes}>like</button>\r\n        </p>\r\n        \r\n        <p style={canRemove}>\r\n          <button onClick={deleteBlog}>remove</button>\r\n        </p>\r\n    </div>\r\n  )  \r\n}\r\n\r\nconst Blogs = () => {\r\n    const blogs = useSelector(store => store.blogs)\r\n    const message = useSelector(store => store.message)\r\n\r\n    const dispatch = useDispatch()\r\n    if (message) {\r\n        setTimeout(() => {\r\n            dispatch(resetNotification())\r\n        }, 3000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blogs</h2>\r\n            <TableContainer component={Paper}>    \r\n            <Table>\r\n                <TableBody>\r\n                {blogs.map(blog =>\r\n                <TableRow key={blog.id}>\r\n                    <TableCell>\r\n                        <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n                    </TableCell>\r\n                    <TableCell>by {blog.author}</TableCell>\r\n                </TableRow>\r\n                )}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs","import axios from \"axios\";\r\nconst url = '/api/users'\r\n\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(url)\r\n    return response.data\r\n}\r\n\r\n\r\nexport default {getAll}","import blogService from '../services/blogs'\r\n\r\nconst userReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case 'NEW_USER':\r\n            return action.data\r\n        case 'LOG_USER':\r\n            return action.data\r\n        case 'LOGOUT':\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const newUser = (user) => {\r\n    return async dispatch => {\r\n        window.localStorage.setItem('user', JSON.stringify(user))\r\n        dispatch({\r\n            type: 'NEW_USER',\r\n            data: user\r\n        })\r\n    }\r\n}\r\n\r\nexport const logUser = (user) => {\r\n    return {\r\n        type: 'LOG_USER',\r\n        data: user\r\n    }\r\n}\r\n\r\n\r\nexport const logoutUser = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    }\r\n}\r\n\r\nexport default userReducer","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { newNotification, resetNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\nimport { useDispatch } from 'react-redux'\r\nimport { newUser } from '../reducers/userReducer'\r\nimport {TextField, Button} from \"@material-ui/core\"\r\n\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const login = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            const user = await blogService.login({\r\n            username,\r\n            password,\r\n            })\r\n            dispatch(newUser(user))\r\n            dispatch(newNotification({type: \"success\", message: 'LOGGED IN'}))\r\n            \r\n            \r\n            blogService.setToken(user.token)\r\n            history.push(\"/blogs\")\r\n        } catch (exception) {\r\n            console.log('WRONG LOGIN CREDS  ')\r\n            dispatch(newNotification({type: \"error\", message: 'WRONG LOGIN CREDS'}))\r\n            setTimeout(() => {\r\n                dispatch(resetNotification())\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange= (event) => setUsername(event.target.value)\r\n    const handlePasswordChange= (event) => setPassword(event.target.value)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Log in to application</h2>\r\n            <form onSubmit={login}>\r\n                <div>\r\n                <TextField label=\"username\"  value={username}\r\n                    name=\"username\" onChange={handleUsernameChange}/> \r\n                </div>\r\n                <div>\r\n                    <TextField label=\"password\"   type=\"password\" value={password}\r\n                    name=\"password\" onChange={handlePasswordChange}/> \r\n                </div><br />\r\n            <Button variant=\"contained\" type='submit'>login</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, {useState} from \"react\";\r\nimport {Button} from \"@material-ui/core\"\r\nconst Toggle = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none': ''}\r\n    const showWhenVisible = {display: visible ? '': 'none'}\r\n    //when visibility is true, we will show our child component (BlogForm, etc)\r\n    //When it is false, we show button to expand the child componenet\r\n\r\n\r\n    const changeVisibility = () => setVisible(!visible)\r\n    \r\n    return (\r\n    <div>\r\n        <div style={hideWhenVisible}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={changeVisibility}>create new blog</Button>\r\n        </div>\r\n        <div style={showWhenVisible}>      \r\n            {props.children}\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={changeVisibility}>cancel</Button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Toggle","import React, {useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport blogService from '../services/blogs'\r\nimport { newBlog } from \"../reducers/blogReducer\";\r\nimport { newNotification, resetNotification } from \"../reducers/notificationReducer\";\r\nimport {Button, TextField} from '@material-ui/core'\r\n\r\n\r\nconst BlogForm = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(store => store.user)\r\n\r\n    //addBlog will add successfully added blog to our blogs state\r\n    const addBlog = (blog) => {\r\n      dispatch(newBlog(blog))\r\n      dispatch(newNotification({\r\n        type: \"success\",message: `${user.name} posted ${blog.title}`\r\n      }))\r\n      setTimeout(() => dispatch(resetNotification()), 3000)\r\n    }\r\n\r\n    const submitBlog = async (event) => {\r\n        event.preventDefault()\r\n        const blog = {\r\n          title,\r\n          author,\r\n          url\r\n        }\r\n        const returnedBlog = await blogService.create(blog)\r\n        console.log(returnedBlog)\r\n\r\n        addBlog(returnedBlog)\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <h2>create new</h2>\r\n        <form onSubmit={submitBlog}>\r\n          <div>\r\n            <TextField label=\"title\" value={title} onChange={({target}) => setTitle(target.value)}/>\r\n          </div>\r\n          <div>\r\n            <TextField label=\"author\" value={author} onChange={({target}) => setAuthor(target.value)}/>\r\n          </div>\r\n          <div>\r\n            <TextField label=\"url\" value={url} onChange={({target}) => setUrl(target.value)}/>\r\n          </div><br />\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">create</Button>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BlogForm","import { useSelector, useDispatch } from 'react-redux'\r\nimport {Alert} from \"@material-ui/lab\"\r\n\r\n\r\nconst Notification = () => {\r\n    const message = useSelector(store => store.message)\r\n\r\n    if (message) {\r\n        const type = message.type === \"error\" \r\n        ? \"error\"\r\n        : \"success\"\r\n        return (\r\n            <div className={message.type}>\r\n                <Alert severity={type}>\r\n                {message.message}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { newNotification, resetNotification } from '../reducers/notificationReducer'\r\nimport blogService from '../services/blogs'\r\nimport { useDispatch } from 'react-redux'\r\nimport { newUser } from '../reducers/userReducer'\r\nimport {TextField, Button} from \"@material-ui/core\"\r\n\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst RegisterForm = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const register = async (event) => {\r\n        event.preventDefault()\r\n        try {\r\n            await blogService.register({\r\n                username,\r\n                name,\r\n                password\r\n            })\r\n            dispatch(newNotification({type: \"success\", message: 'REGISTERED'}))\r\n            \r\n            history.push(\"/login\")\r\n        } catch (exception) {\r\n            dispatch(newNotification({type: \"error\", message: 'PASSWORD MUST BE AT LEAST 3 CHARACTERS'}))\r\n            setTimeout(() => {\r\n                dispatch(resetNotification())\r\n            }, 3000)\r\n        }\r\n    }\r\n\r\n    const handleUsernameChange= (event) => setUsername(event.target.value)\r\n    const handlePasswordChange= (event) => setPassword(event.target.value)\r\n    const handleNameChange= (event) => setName(event.target.value)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Register</h2>\r\n            <form onSubmit={register}>\r\n                <div>\r\n                    <TextField label=\"username\"  value={username}\r\n                        name=\"username\" onChange={handleUsernameChange}/> \r\n                </div>\r\n                <div>\r\n                    <TextField label=\"name\"  value={name}\r\n                        name=\"name\" onChange={handleNameChange}/> \r\n                </div>\r\n                <div>\r\n                    <TextField label=\"password\"   type=\"password\" value={password}\r\n                    name=\"password\" onChange={handlePasswordChange}/> \r\n                </div><br />\r\n            <Button variant=\"contained\" type='submit'>Register</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from 'react'\r\nimport Blogs from './components/Blogs'\r\nimport userService from './services/users'\r\nimport blogService from './services/blogs'\r\nimport LoginForm from './components/LoginForm'\r\nimport Toggle from './components/Toggle'\r\nimport BlogForm from './components/BlogForm'\r\nimport Notification from './components/Notification'\r\nimport { Blog } from './components/Blogs'\r\n\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { logoutUser, logUser, newUser } from './reducers/userReducer'\r\n\r\nimport {BrowserRouter as Router,\r\n  Switch, Route, Link, Redirect, useParams\r\n} from \"react-router-dom\"\r\n\r\nimport {Container, AppBar, Toolbar, Button,\r\nTable, TableHead, TableBody, TableRow, TableContainer,\r\nTableCell} from '@material-ui/core'\r\nimport RegisterForm from './components/RegisterForm'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst User = ({users}) => {\r\n  const id = useParams().id\r\n  const user = users.find(user => user.id === id)\r\n  return (\r\n    <div>\r\n      <h2>{user.name}</h2>\r\n      <ul>\r\n        {user.blogs.map(blog => \r\n          <li key={blog.id}>\r\n              <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </li>)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Users = ({users}) => {\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell></TableCell>\r\n            <TableCell><strong>blogs created</strong></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {users.map(user => \r\n            <TableRow key={user.id}>\r\n              <TableCell>\r\n                <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n              </TableCell>\r\n              <TableCell>{user.blogs.length}</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(store => store.user)\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs()) \r\n    userService.getAll().then(users => setUsers(users))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const userJSON = window.localStorage.getItem('user')\r\n    if (userJSON) {\r\n      const user = JSON.parse(userJSON)\r\n      dispatch(logUser(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  //wrapper function that puts the BlogForm child into Toggle component\r\n  const createBlog = () => {\r\n    return (\r\n      <Toggle buttonLabel=\"blog\">\r\n        <BlogForm/>\r\n      </Toggle>\r\n    )\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('user')\r\n    dispatch(logoutUser())\r\n    blogService.setToken(null)\r\n  }\r\n\r\n\r\n  const toShow = () => {\r\n    if (user === null) {\r\n      return (\r\n        <div>\r\n          <Login />\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <h2>blogs</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Button color=\"inherit\" component={Link} to=\"/users\">\r\n              users\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/blogs\">\r\n              blogs\r\n            </Button>\r\n            <strong>{user ? `${user.name} is logged in` : ''}</strong>\r\n            {user \r\n            ? <Button color=\"inherit\" onClick={logout}>logout</Button> \r\n            : <Button color=\"inherit\" component={Link} to=\"/login\">login</Button>}\r\n            {user ? \"\" :<Button color=\"inherit\" component={Link} to=\"/register\">Register</Button>}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Notification/>\r\n\r\n        <Switch>\r\n          <Route path=\"/users/:id\">\r\n            <User users={users}/>\r\n          </Route>\r\n          <Route path=\"/users\">\r\n            {user ? <Users users={users}/> : <Redirect to=\"/login\"/>}\r\n          </Route>\r\n          <Route path=\"/blogs/:id\">\r\n            <Blog />\r\n          </Route>\r\n          <Route path=\"/blogs\">\r\n            {user ? <Blogs /> : <Redirect to=\"/login\"/>}\r\n            {user && createBlog()}\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            {user ? <Redirect to=\"/blogs\"/> : <RegisterForm />}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {!user ? <Login /> : <Redirect to=\"/blogs\"/>}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport blogReducer from './reducers/blogReducer'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    message: notificationReducer,\r\n    blogs: blogReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {Provider} from 'react-redux'\r\nimport store from './store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}